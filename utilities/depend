utilities/table$(OBJ_SUFFIX): utilities/table.c utilities/table.h \
  utilities/boolean.h conditions/conditions.h position/position.h \
  position/board.h utilities/bitmask.h position/side.h \
  position/side.enum.h position/side.enum position/color.h \
  position/color.enum.h position/color.enum position/pieceid.h \
  pieces/pieces.h pieces/walks/vectors.h position/castling_rights.h \
  output/plaintext/message.h output/message.h input/plaintext/language.h \
  stipulation/stipulation.h stipulation/goals/goals.h \
  stipulation/slice_type.h stipulation/slice_type.enum.h \
  stipulation/slice_type.enum output/mode.h output/mode.enum.h \
  output/mode.enum solving/move_effect_journal.h \
  solving/machinery/solve.h solving/machinery/dispatch.h \
  debugging/trace.h solving/ply.h debugging/assert.h

utilities/table.h:

utilities/boolean.h:

conditions/conditions.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/side.enum:

position/color.h:

position/color.enum.h:

position/color.enum:

position/pieceid.h:

pieces/pieces.h:

pieces/walks/vectors.h:

position/castling_rights.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/move_effect_journal.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

debugging/assert.h:
