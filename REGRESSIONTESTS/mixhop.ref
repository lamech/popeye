fors 3r4/1=p1r=p1=p1/rr1r4/8/2=p1R1=p1/=p7/1r=p1=p1=p1/8

reference for mixhopper moves and captures
wh should have 8 moves in each position
black pieces able to move depend on which is paralysed by w

+---a---b---c---d---e---f---g---h---+
|                                   |
8   .   .   . -RE   .   .   .   .   8
|                                   |
7   . =DU   . -RE =DU   . =DU   .   7
|                                   |
6 -RE -RE   . -RE   .   .   .   .   6
|                                   |
5   .   .   .   .   .   .   .   .   5
|                                   |
4   .   . =DU   .  RE   . =DU   .   4
|                                   |
3 =DU   .   .   .   .   .   .   .   3
|                                   |
2   . -RE =DU   . =DU   . =DU   .   2
|                                   |
1   .   .   .   .   .   .   .   .   1
|                                   |
+---a---b---c---d---e---f---g---h---+
  ~1                     1 + 6 + 9n
               Madrasi
               Duplex

a) 

   1.REe4-f7 !

   1.REe4*d7 !

   1.REe4-g5 !

   1.REe4-c5 !

   1.REe4-g3 !

   1.REe4-c3 !

   1.REe4-f2 !

   1.REe4-d2 !

  add_to_move_generation_stack:           8
                     play_move:           8
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

   1.REd8*e7 !

   1.REd8-c7 !

   1.REd6*e7 !

   1.REd6-c7 !

   1.REd6*b7 !

   1.REd6-b5 !

   1.REb6-c7 !

   1.REb6-a7 !

   1.REb6-d5 !

   1.REb6-a5 !

   1.REb6*c2 !

   1.REb6-a2 !

   1.REa6*b7 !

   1.REa6-b5 !

   1.REa6-b3 !

   1.REb2-c6 !

   1.REb2-c3 !

   1.REb2-c1 !

  add_to_move_generation_stack:          19
                     play_move:          18
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

b) RE ==> BE  

   1.BEe4-c8 !

   1.BEe4*a6 !

   1.BEe4-h3 !

   1.BEe4-b3 !

   1.BEe4-f1 !

   1.BEe4-d1 !

  add_to_move_generation_stack:           6
                     play_move:           6
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

   1.BEd8-f8 !

   1.BEd8-a7 !

   1.BEd8-c5 !

   1.BEd7-h5 !

   1.BEd7-f3 !

   1.BEd6-f6 !

   1.BEb6*e7 !

   1.BEb2-f8 !

   1.BEb2-h6 !

   1.BEb2-b4 !

  add_to_move_generation_stack:          10
                     play_move:          10
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

c) RE ==> RM  

   1.RMe4-f8 !

   1.RMe4*d8 !

   1.RMe4-h5 !

   1.RMe4-b5 !

   1.RMe4-h3 !

   1.RMe4-b3 !

   1.RMe4-f1 !

   1.RMe4-d1 !

  add_to_move_generation_stack:           8
                     play_move:           8
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

   1.RMd7-f8 !

   1.RMd7-a8 !

   1.RMd7-f6 !

   1.RMd7-e5 !

   1.RMd7-c5 !

   1.RMd6-e8 !

   1.RMd6-c8 !

   1.RMd6-a7 !

   1.RMd6-a5 !

   1.RMb6-c8 !

   1.RMb6-a8 !

   1.RMb6*e7 !

   1.RMb6-e5 !

   1.RMb6-c1 !

   1.RMb6-a1 !

   1.RMa6-c7 !

   1.RMa6-c5 !

   1.RMb2-c7 !

   1.RMb2-a7 !

   1.RMb2-d3 !

   1.RMb2-d1 !

  add_to_move_generation_stack:          21
                     play_move:          21
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

d) RE ==> BM  

   1.BMe4-b8 !

   1.BMe4-a7 !

   1.BMe4-h2 !

   1.BMe4*b2 !

   1.BMe4-g1 !

   1.BMe4-c1 !

  add_to_move_generation_stack:           6
                     play_move:           6
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

   1.BMd8-f7 !

   1.BMd8-e6 !

   1.BMd8-b5 !

   1.BMd7-h4 !

   1.BMd7-g3 !

   1.BMd6-e8 !

   1.BMd6-f7 !

   1.BMd6-a2 !

   1.BMb6-e8 !

   1.BMa6-b8 !

   1.BMa6-c7 !

   1.BMa6-d4 !

   1.BMa6-c3 !

  add_to_move_generation_stack:          13
                     play_move:          13
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

e) RE ==> RW  

   1.RWe4-f6 !

   1.RWe4*d6 !

   1.RWe4-f5 !

   1.RWe4-d5 !

   1.RWe4-f3 !

   1.RWe4-d3 !

  add_to_move_generation_stack:           8
                     play_move:           6
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

   1.RWd8-e8 !

   1.RWd8-c8 !

   1.RWd7-c8 !

   1.RWd7*e7 !

   1.RWd7-c7 !

   1.RWd7-c6 !

   1.RWb6-c7 !

   1.RWb6*b7 !

   1.RWb6-c6 !

   1.RWb6-c5 !

   1.RWb6-b5 !

   1.RWb6-c3 !

   1.RWb6*a3 !

   1.RWa6-a7 !

   1.RWa6-a5 !

   1.RWa6-b4 !

   1.RWb2-c5 !

   1.RWb2-a5 !

   1.RWb2-b3 !

   1.RWb2-b1 !

  add_to_move_generation_stack:          22
                     play_move:          20
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

f) RE ==> BW  

   1.BWe4-c7 !

   1.BWe4*b6 !

   1.BWe4-g3 !

   1.BWe4-c3 !

   1.BWe4-f2 !

   1.BWe4-d2 !

  add_to_move_generation_stack:           6
                     play_move:           6
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

   1.BWd8-e8 !

   1.BWd8*b7 !

   1.BWd8-c6 !

   1.BWd7-g5 !

   1.BWd7-f4 !

   1.BWd6-e6 !

   1.BWd6-a4 !

   1.BWd6-b3 !

   1.BWa6-a7 !

   1.BWa6-c5 !

   1.BWa6-b4 !

   1.BWb2-f7 !

   1.BWb2-g6 !

   1.BWb2-b3 !

   1.BWb2-a2 !

  add_to_move_generation_stack:          15
                     play_move:          15
 is_white_king_square_attacked:           0
 is_black_king_square_attacked:           0

solution finished.


