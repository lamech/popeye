output/plaintext/tree/tree$(OBJ_SUFFIX): output/plaintext/tree/tree.c \
  output/plaintext/tree/tree.h stipulation/stipulation.h \
  stipulation/goals/goals.h position/board.h utilities/bitmask.h \
  utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  stipulation/pipe.h stipulation/structure_traversal.h \
  stipulation/slice.h stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  stipulation/fork.h stipulation/slice_insertion.h stipulation/move.h \
  stipulation/battle_play/branch.h stipulation/help_play/branch.h \
  solving/machinery/solve.h solving/machinery/dispatch.h \
  debugging/trace.h solving/trivial_end_filter.h solving/ply.h \
  output/plaintext/plaintext.h output/output.h \
  output/plaintext/protocol.h output/plaintext/move_inversion_counter.h \
  output/plaintext/goal_writer.h output/plaintext/constraint_writer.h \
  output/plaintext/ohneschach_detect_undecidable_goal.h \
  output/plaintext/tree/end_of_solution_writer.h \
  output/plaintext/tree/check_writer.h \
  output/plaintext/tree/threat_writer.h \
  output/plaintext/tree/move_writer.h \
  output/plaintext/tree/zugzwang_writer.h \
  output/plaintext/tree/key_writer.h output/plaintext/tree/try_writer.h \
  output/plaintext/tree/refuting_variation_writer.h \
  output/plaintext/tree/refutation_writer.h \
  output/plaintext/tree/exclusive.h output/plaintext/message.h \
  output/message.h input/plaintext/language.h options/options.h \
  conditions/conditions.h position/position.h position/color.h \
  position/color.enum.h position/color.enum position/pieceid.h \
  pieces/walks/vectors.h position/castling_rights.h debugging/assert.h

output/plaintext/tree/tree.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

stipulation/fork.h:

stipulation/slice_insertion.h:

stipulation/move.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/trivial_end_filter.h:

solving/ply.h:

output/plaintext/plaintext.h:

output/output.h:

output/plaintext/protocol.h:

output/plaintext/move_inversion_counter.h:

output/plaintext/goal_writer.h:

output/plaintext/constraint_writer.h:

output/plaintext/ohneschach_detect_undecidable_goal.h:

output/plaintext/tree/end_of_solution_writer.h:

output/plaintext/tree/check_writer.h:

output/plaintext/tree/threat_writer.h:

output/plaintext/tree/move_writer.h:

output/plaintext/tree/zugzwang_writer.h:

output/plaintext/tree/key_writer.h:

output/plaintext/tree/try_writer.h:

output/plaintext/tree/refuting_variation_writer.h:

output/plaintext/tree/refutation_writer.h:

output/plaintext/tree/exclusive.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

options/options.h:

conditions/conditions.h:

position/position.h:

position/color.h:

position/color.enum.h:

position/color.enum:

position/pieceid.h:

pieces/walks/vectors.h:

position/castling_rights.h:

debugging/assert.h:
output/plaintext/tree/end_of_solution_writer$(OBJ_SUFFIX): \
  output/plaintext/tree/end_of_solution_writer.c \
  output/plaintext/tree/end_of_solution_writer.h \
  solving/machinery/solve.h stipulation/stipulation.h \
  stipulation/goals/goals.h position/board.h utilities/bitmask.h \
  utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  solving/has_solution_type.h solving/has_solution_type.enum.h \
  solving/has_solution_type.enum output/plaintext/plaintext.h \
  output/output.h output/plaintext/message.h output/message.h \
  input/plaintext/language.h solving/pipe.h

output/plaintext/tree/end_of_solution_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/has_solution_type.enum:

output/plaintext/plaintext.h:

output/output.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

solving/pipe.h:
output/plaintext/tree/key_writer$(OBJ_SUFFIX): output/plaintext/tree/key_writer.c \
  output/plaintext/tree/key_writer.h solving/machinery/solve.h \
  stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
  utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  output/plaintext/protocol.h output/plaintext/message.h \
  output/message.h input/plaintext/language.h platform/beep.h \
  solving/pipe.h options/options.h debugging/assert.h

output/plaintext/tree/key_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

output/plaintext/protocol.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

platform/beep.h:

solving/pipe.h:

options/options.h:

debugging/assert.h:
output/plaintext/tree/try_writer$(OBJ_SUFFIX): output/plaintext/tree/try_writer.c \
  output/plaintext/tree/try_writer.h solving/machinery/solve.h \
  stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
  utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  solving/battle_play/try.h utilities/table.h \
  output/plaintext/protocol.h output/plaintext/tree/key_writer.h \
  output/plaintext/message.h output/message.h input/plaintext/language.h \
  solving/pipe.h debugging/assert.h

output/plaintext/tree/try_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

solving/battle_play/try.h:

utilities/table.h:

output/plaintext/protocol.h:

output/plaintext/tree/key_writer.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

solving/pipe.h:

debugging/assert.h:
output/plaintext/tree/move_writer$(OBJ_SUFFIX): output/plaintext/tree/move_writer.c \
  output/plaintext/tree/move_writer.h solving/machinery/solve.h \
  stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
  utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h \
  output/plaintext/protocol.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  output/plaintext/tree/tree.h solving/pipe.h

output/plaintext/tree/move_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

output/plaintext/protocol.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

output/plaintext/tree/tree.h:

solving/pipe.h:
output/plaintext/tree/refuting_variation_writer$(OBJ_SUFFIX): \
  output/plaintext/tree/refuting_variation_writer.c \
  output/plaintext/tree/refuting_variation_writer.h \
  solving/machinery/solve.h stipulation/stipulation.h \
  stipulation/goals/goals.h position/board.h utilities/bitmask.h \
  utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  stipulation/branch.h solving/ply.h output/plaintext/protocol.h \
  output/plaintext/move_inversion_counter.h output/plaintext/message.h \
  output/message.h input/plaintext/language.h solving/pipe.h

output/plaintext/tree/refuting_variation_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

stipulation/branch.h:

solving/ply.h:

output/plaintext/protocol.h:

output/plaintext/move_inversion_counter.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

solving/pipe.h:
output/plaintext/tree/refutation_writer$(OBJ_SUFFIX): \
  output/plaintext/tree/refutation_writer.c \
  output/plaintext/tree/refutation_writer.h solving/machinery/solve.h \
  stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
  utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  output/plaintext/protocol.h output/plaintext/tree/tree.h \
  output/plaintext/tree/check_writer.h output/plaintext/message.h \
  output/message.h input/plaintext/language.h solving/pipe.h

output/plaintext/tree/refutation_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

output/plaintext/protocol.h:

output/plaintext/tree/tree.h:

output/plaintext/tree/check_writer.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

solving/pipe.h:
output/plaintext/tree/threat_writer$(OBJ_SUFFIX): \
  output/plaintext/tree/threat_writer.c \
  output/plaintext/tree/threat_writer.h solving/machinery/solve.h \
  stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
  utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h \
  output/plaintext/message.h output/message.h input/plaintext/language.h \
  output/plaintext/plaintext.h output/output.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  solving/battle_play/threat.h solving/ply.h utilities/table.h \
  solving/pipe.h

output/plaintext/tree/threat_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

output/output.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

solving/battle_play/threat.h:

solving/ply.h:

utilities/table.h:

solving/pipe.h:
output/plaintext/tree/zugzwang_writer$(OBJ_SUFFIX): \
  output/plaintext/tree/zugzwang_writer.c \
  output/plaintext/tree/zugzwang_writer.h solving/machinery/solve.h \
  stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
  utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  solving/has_solution_type.h solving/has_solution_type.enum.h \
  solving/has_solution_type.enum solving/ply.h \
  output/plaintext/tree/check_writer.h output/plaintext/message.h \
  output/message.h input/plaintext/language.h solving/pipe.h

output/plaintext/tree/zugzwang_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/has_solution_type.enum:

solving/ply.h:

output/plaintext/tree/check_writer.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

solving/pipe.h:
output/plaintext/tree/check_writer$(OBJ_SUFFIX): \
  output/plaintext/tree/check_writer.c \
  output/plaintext/tree/check_writer.h solving/machinery/solve.h \
  stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
  utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h solving/check.h \
  debugging/measure.h output/plaintext/protocol.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  output/plaintext/message.h output/message.h input/plaintext/language.h \
  solving/pipe.h

output/plaintext/tree/check_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/check.h:

debugging/measure.h:

output/plaintext/protocol.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

solving/pipe.h:
output/plaintext/tree/exclusive$(OBJ_SUFFIX): output/plaintext/tree/exclusive.c \
  output/plaintext/tree/exclusive.h solving/machinery/solve.h \
  stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
  utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
  stipulation/slice_type.enum.h stipulation/slice_type.enum \
  position/side.h position/side.enum.h position/side.enum \
  pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
  solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
  stipulation/structure_traversal.h stipulation/slice.h \
  stipulation/slice_structural_type.h \
  stipulation/slice_structural_type.enum.h \
  stipulation/slice_structural_type.enum \
  stipulation/slice_functional_type.h \
  stipulation/slice_functional_type.enum.h \
  stipulation/slice_functional_type.enum \
  stipulation/slice_contextual_type.h \
  stipulation/slice_contextual_type.enum.h \
  stipulation/slice_contextual_type.enum stipulation/traversal.h \
  output/plaintext/protocol.h conditions/exclusive.h utilities/table.h \
  position/position.h position/color.h position/color.enum.h \
  position/color.enum position/pieceid.h pieces/walks/vectors.h \
  position/castling_rights.h solving/ply.h solving/has_solution_type.h \
  solving/has_solution_type.enum.h solving/has_solution_type.enum \
  output/plaintext/tree/move_writer.h output/plaintext/tree/tree.h \
  output/plaintext/message.h output/message.h input/plaintext/language.h \
  solving/pipe.h debugging/assert.h

output/plaintext/tree/exclusive.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

output/plaintext/protocol.h:

conditions/exclusive.h:

utilities/table.h:

position/position.h:

position/color.h:

position/color.enum.h:

position/color.enum:

position/pieceid.h:

pieces/walks/vectors.h:

position/castling_rights.h:

solving/ply.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/has_solution_type.enum:

output/plaintext/tree/move_writer.h:

output/plaintext/tree/tree.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

solving/pipe.h:

debugging/assert.h:
